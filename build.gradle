buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
configurations.all{
    resolutionStrategy.eachDependency {DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework'){
            details.useVersion '5.0.6.RELEASE'
        }
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.security:spring-security-web:5.0.5.RELEASE')
	compile('org.springframework.security:spring-security-config:5.0.5.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('mysql:mysql-connector-java')
//	compile('org.flywaydb:flyway-core')//	for pivitol spark
	runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
bootRun{
		addResources = true
}
